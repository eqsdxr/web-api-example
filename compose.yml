services:
  backend:
    build: backend/
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - database
    networks:
      - postgres-network
    develop:
      watch:
        - action: sync
          path: .
          target: .
          ignore:
            - backend/.venv/
        - action: rebuild
          path: uv.lock
  database:
    image: 'postgres:17'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - 15432:5432
    volumes:
      - database-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    networks:
      - postgres-network
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
      - POSTGRES_HOST=${POSTGRES_HOST?Variable not set}

volumes:
  database-data:

networks: 
  postgres-network:
    driver: bridge
